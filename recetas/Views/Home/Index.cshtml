@model IEnumerable<recetas.Models.Receta>

@{
    ViewData["Title"] = "Gestión de Recetas";
}

<form id="antiForgeryForm" method="post" asp-controller="Home" asp-action="ToggleFavorite">
    @Html.AntiForgeryToken()
</form>

<div class="mb-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="display-5">
            <i class="fas fa-book-open text-primary me-2"></i>Mis Recetas
        </h1>
        <a asp-action="Create" class="btn btn-primary btn-lg shadow">
            <i class="fas fa-plus me-2"></i>Nueva Receta
        </a>
    </div>

    <!-- Filtros de búsqueda -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Buscar</label>
                    <input type="text" name="searchString" value="@ViewData["searchString"]"
                           placeholder="Nombre, descripción o ingredientes..."
                           class="form-control" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Categoría</label>
                    <select name="category" class="form-select">
                        <option value="">Todas las categorías</option>
                        @foreach (var category in ViewBag.Categories as List<string> ?? new List<string>())
                        {
                            <option value="@category" selected="@(ViewData["category"]?.ToString() == category)">
                                @category
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Dificultad</label>
                    <select name="difficulty" class="form-select">
                        <option value="">Todas las dificultades</option>
                        @foreach (var difficulty in ViewBag.Difficulties as List<string> ?? new List<string>())
                        {
                            <option value="@difficulty" selected="@(ViewData["difficulty"]?.ToString() == difficulty)">
                                @difficulty
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2 d-grid">
                    <button type="submit" class="btn btn-primary mt-4">
                        <i class="fas fa-search me-1"></i> Filtrar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Grid de recetas -->
<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var receta in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                @if (!string.IsNullOrEmpty(receta.ImageUrl))
                {
                    <img src="@receta.ImageUrl" class="card-img-top" alt="@receta.Name" style="height: 200px; object-fit: cover;">
                }
                else
                {
                    <div class="bg-primary text-white d-flex align-items-center justify-content-center" style="height: 200px;">
                        <i class="fas fa-utensils fa-3x"></i>
                    </div>
                }

                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h5 class="card-title text-truncate" title="@receta.Name">@receta.Name</h5>
                        <button onclick="toggleFavorite(@receta.Id)"
                                class="btn btn-sm btn-light shadow-sm" title="Favorito">
                            <i class="fas fa-heart @(receta.IsFavorite ? "text-danger" : "text-secondary")" id="heart-@receta.Id"></i>
                        </button>
                    </div>
                    <p class="card-text text-truncate" title="@receta.Description">@receta.Description</p>
                    <div class="mb-3">
                        <span class="badge bg-primary me-1">@receta.Category</span>
                        <span class="badge bg-info text-dark">@receta.Difficulty</span>
                    </div>

                    <div class="d-flex justify-content-between text-muted small mb-3">
                        <div><i class="fas fa-clock me-1"></i>@receta.PreparationTime min</div>
                        <div><i class="fas fa-users me-1"></i>@receta.Servings porciones</div>
                    </div>

                    <div class="mt-auto d-flex justify-content-between">
                        <a asp-action="Details" asp-route-id="@receta.Id" class="btn btn-primary btn-sm flex-grow-1 me-2">
                            Ver Receta
                        </a>
                        <a asp-action="Edit" asp-route-id="@receta.Id" class="btn btn-outline-secondary btn-sm me-2">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@receta.Id" class="btn btn-outline-danger btn-sm">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="text-center py-5 text-muted">
        <i class="fas fa-search fa-4x mb-3"></i>
        <h3>No se encontraron recetas</h3>
        <p>Intenta ajustar tus filtros de búsqueda o crea una nueva receta.</p>
        <a asp-action="Create" class="btn btn-primary btn-lg">
            <i class="fas fa-plus me-2"></i>Crear Primera Receta
        </a>
    </div>
}



@section Scripts {
    <script>
        async function toggleFavorite(recipeId) {
            try {
                const response = await fetch(`/Home/ToggleFavorite/${recipeId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                });

                const result = await response.json();
                if (result.success) {
                    const heartIcon = document.getElementById(`heart-${recipeId}`);
                    if (result.isFavorite) {
                        heartIcon.classList.remove('text-secondary');
                        heartIcon.classList.add('text-danger');
                    } else {
                        heartIcon.classList.remove('text-danger');
                        heartIcon.classList.add('text-secondary');
                    }
                }
            } catch (error) {
                console.error('Error toggling favorite:', error);
            }
        }
    </script>
}
